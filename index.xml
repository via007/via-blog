<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Via Blog👀</title>
    <link>https://example.com/</link>
    <description>Recent content on Via Blog👀</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Feb 2025 10:56:54 +0800</lastBuildDate>
    <atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DeepSeek 提示词大全</title>
      <link>https://example.com/posts/97-deepseek%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%A4%A7%E5%85%A8/</link>
      <pubDate>Thu, 20 Feb 2025 10:56:54 +0800</pubDate>
      <guid>https://example.com/posts/97-deepseek%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%A4%A7%E5%85%A8/</guid>
      <description>&lt;h1 id=&#34;deepseek-提示词大全&#34;&gt;DeepSeek 提示词大全&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;仅供参考，具体情况可自行修改。点击 more 查看目录进行跳转&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python 常用字符串处理方法</title>
      <link>https://example.com/posts/98-python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 10 Feb 2025 21:05:11 -0300</pubDate>
      <guid>https://example.com/posts/98-python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;h1 id=&#34;python-字符串处理&#34;&gt;Python 字符串处理&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-使用字符串方法-translate-替换字符串中的字符&#34;&gt;1. 使用字符串方法 &lt;code&gt;translate()&lt;/code&gt; 替换字符串中的字符&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;translate()&lt;/code&gt; 方法可以根据指定的映射表替换字符串中的字符。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;translation_table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;maketrans(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aeiou&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12345&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new_s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;translate(translation_table)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(new_s)  &lt;span style=&#34;color:#75715e&#34;&gt;# 输出: h2ll4 w4rld&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-使用字符串方法-swapcase-交换字符串中的大小写&#34;&gt;2. 使用字符串方法 &lt;code&gt;swapcase()&lt;/code&gt; 交换字符串中的大小写&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;swapcase()&lt;/code&gt; 方法可以交换字符串中的大小写。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;swapcase())  &lt;span style=&#34;color:#75715e&#34;&gt;# 输出: hELLO, wORLD!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-使用字符串方法-zfill-在数字字符串前面填充零&#34;&gt;3. 使用字符串方法 &lt;code&gt;zfill()&lt;/code&gt; 在数字字符串前面填充零&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;zfill()&lt;/code&gt; 方法可以在数字字符串的左侧填充零，使其达到指定的宽度。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;number &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;42&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;padded_number &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; number&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zfill(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(padded_number)  &lt;span style=&#34;color:#75715e&#34;&gt;# 输出: 00042&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-使用字符串方法-partition-和-rpartition-分割字符串&#34;&gt;4. 使用字符串方法 &lt;code&gt;partition()&lt;/code&gt; 和 &lt;code&gt;rpartition()&lt;/code&gt; 分割字符串&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;partition()&lt;/code&gt; 方法可以将字符串按照指定的分隔符分割为三部分，返回一个包含分割结果的元组；&lt;code&gt;rpartition()&lt;/code&gt; 则是从右边开始分割。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world python&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;partition(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(parts)  &lt;span style=&#34;color:#75715e&#34;&gt;# 输出: (&amp;#39;hello&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;world python&amp;#39;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rpartition(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(parts)  &lt;span style=&#34;color:#75715e&#34;&gt;# 输出: (&amp;#39;hello world&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;python&amp;#39;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5-使用字符串方法-splitlines-按行拆分字符串&#34;&gt;5. 使用字符串方法 &lt;code&gt;splitlines()&lt;/code&gt; 按行拆分字符串&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;splitlines()&lt;/code&gt; 方法可以将字符串按行拆分，并返回一个包含每行内容的列表。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024年度读书分享~</title>
      <link>https://example.com/posts/99-2024%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/</link>
      <pubDate>Mon, 03 Feb 2025 21:05:11 -0300</pubDate>
      <guid>https://example.com/posts/99-2024%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/</guid>
      <description>&lt;p&gt;​&#x9;&#x9;2024年，陆陆续续看了一些书，有的是一口气读完的，有的则断断续续看了两个月。看的书比较杂，没什么系统规划，大多是偶然看到某本书，觉得有趣就买来读。平时更喜欢看纸质书，电子书总是读不完，手头还有好几本读到一半的电子书。今年读的这几本，都很喜欢，也推荐给了不少朋友，下面简单分享一下。&lt;/p&gt;&#xA;&lt;h4 id=&#34;禅与摩托车维修艺术-罗伯特m波西格&#34;&gt;《禅与摩托车维修艺术》—— 罗伯特·M·波西格&lt;/h4&gt;&#xA;&lt;p&gt;​&#x9;&#x9;这本书的名字挺吸引人，禅和摩托车有什么关系呢？带着这个疑问，走进了波西格的世界。这本书不仅仅是关于摩托车维修的故事，更像是一场哲学与禅意的对话。波西格通过修车的经历，探讨了“良质”这个哲学概念，试图揭示生活中理性与感性的交织。书中的禅意提醒我们，生活中那些无法用逻辑解释的部分，往往是最深刻的理解来源。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“良质是一种不可言说的存在，只有亲自体验过的人才能感受到它。”&lt;/p&gt;&#xA;&lt;p&gt;“如果一个人不能理解良质，那他就无法理解自己的生活。”&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;透明社会-韩炳哲&#34;&gt;《透明社会》—— 韩炳哲&lt;/h4&gt;&#xA;&lt;p&gt;​&#x9;&#x9;这本书深刻剖析了现代社会的透明性与隐私之间的冲突。在互联网时代，信息过度透明，个人隐私几乎消失。韩炳哲用冷静的语言警示我们，透明社会带来了对个体的操控与压力。我们在追求透明的过程中，是否失去了独立性和隐私？这个问题在信息高速流动的今天，显得尤为深刻。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“透明社会的核心是人们必须无所遁形。”&lt;/p&gt;&#xA;&lt;p&gt;“信息的过度透明，使得个体从内心的自由中被剥夺。”&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;莱拉-一场对道德的探究-罗伯特m波西格&#34;&gt;《莱拉 一场对道德的探究》—— 罗伯特·M·波西格&lt;/h4&gt;&#xA;&lt;p&gt;​&#x9;&#x9;继《禅与摩托车维修艺术》之后，波西格的《莱拉》再次引发了对道德与人性的思考。这本书以哲学为背景，探讨了人类在追求自我、探索道德时的困惑与冲突。波西格通过莱拉的故事，挑战了现代社会的道德体系，问我们是否真的理解和遵循那些看似理所当然的道德准则。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“道德，像所有伟大的真理一样，充满了模糊性。”&lt;/p&gt;&#xA;&lt;p&gt;“道德的判断不能仅凭表象，它需要深入人心。”&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
